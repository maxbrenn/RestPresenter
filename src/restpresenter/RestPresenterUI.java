/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package restpresenter;

import java.awt.Dimension;
import java.awt.Insets;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author maxbrenn
 */
public class RestPresenterUI extends javax.swing.JFrame {

    public static boolean isRec = false;

    /**
     * Creates new form RestPresenterUI
     */
    public RestPresenterUI() {
        initComponents();
        
    }
    
    
    public void initiateInstruction(Instruction _instruction, Language _language , int _readSeconds, int _recSeconds) {
        
               
        String instrText = "";
        
        if(_language == Language.de) {
            instrText = _instruction.deText;
        }
        if(_language == Language.en) {
            instrText = _instruction.enText;
        }
        if(_language == Language.es) {
            instrText = _instruction.esText;
        }
        
        
        instrText.replace("\n", "<br>");
        instrText = "<html><center>" + instrText + "</center></html>";
        showInstruction(instrText);
        
        
        wait(_readSeconds);
        
        startRec();
        
        wait(_recSeconds);
        
        stopRec();
        
    }
    
    

    public void showInstruction(String _instruction) {
        
               
        instructionDisplay.setText(_instruction);
        
        
        
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recLED = new javax.swing.JLabel();
        recLabel = new javax.swing.JLabel();
        instructionDisplay = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(java.awt.Color.white);
        setUndecorated(true);
        getContentPane().setLayout(null);

        recLED.setFont(new java.awt.Font("Tahoma", 0, 250)); // NOI18N
        recLED.setForeground(new java.awt.Color(255, 0, 0));
        recLED.setText("â€¢");
        getContentPane().add(recLED);
        recLED.setBounds(858, 11, 114, 133);

        recLabel.setFont(new java.awt.Font("Tahoma", 1, 102)); // NOI18N
        recLabel.setText("REC");
        getContentPane().add(recLabel);
        recLabel.setBounds(978, 28, 205, 124);

        instructionDisplay.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        instructionDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        instructionDisplay.setText("test message");
        instructionDisplay.setMaximumSize(new java.awt.Dimension(1200, 58));
        instructionDisplay.setMinimumSize(new java.awt.Dimension(1200, 58));
        instructionDisplay.setPreferredSize(new java.awt.Dimension(1200, 58));
        getContentPane().add(instructionDisplay);
        instructionDisplay.setBounds(0, 150, 1220, 390);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public void printMessage(String _message) {

        instructionDisplay.setText(_message);

    }
    
    public void countDown(int _seconds) {
        
        
        
        
    }

    public void startRec() {
        isRec = true;

            startRecAnimation();
        

    }

    
    public void stopRec() {
        isRec = false;
    }
    
    
    public void startRecAnimation() {


        new Thread() {

            public void run() {

                
                recLabel.setVisible(true);

                while (true) {

                    recLED.setVisible(true);
                    

                    try {
                        sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(RestPresenterUI.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    recLED.setVisible(false);

                    try {
                        sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(RestPresenterUI.class.getName()).log(Level.SEVERE, null, ex);
                    }



                    if (!isRec) {
                        
                        
                        recLED.setVisible(false);
                        recLabel.setVisible(false);
                        
                        break;
                    }

                }



            }
        }.start();




    }
    
    public void cleanScreen(){
        
        recLED.setVisible(false);
        recLabel.setVisible(false);
      
    }
    
    public void wait(int _seconds){
        try {
            Thread.sleep(_seconds * 1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(RestPresenterUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestPresenterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestPresenterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestPresenterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestPresenterUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new RestPresenterUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel instructionDisplay;
    private javax.swing.JLabel recLED;
    private javax.swing.JLabel recLabel;
    // End of variables declaration//GEN-END:variables
}
